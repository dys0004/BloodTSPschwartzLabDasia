#!/bin/bash

# ----------------QSUB Parameters----------------- #
##choose queue
####PBS -q
##list - node are nodes: ppn are cpus per node: walltime=walltime
#PBS -l nodes=1:ppn=20,mem=16gb,walltime=03:00:00:00
##email
#PBS -M dys0004@tigermail.auburn.edu
##send email abort; begin; end
#PBS -m ae
##job name
#PBS -N Colub_BWA_mapping_October4th_2ndTry
##combine standard out and standard error
#PBS -j oe
# ----------------Load Modules-------------------- #
module load bwa/0.7.15
module load samtools/1.6
module load gnu-parallel/20160322 

############################################################
############################################################

### Change directory to the scratch directory with you cleaned Paired files
cd /scratch/ReptileTrinityDYS/Hemoglobin_Counts_BloodTSP/Colub

############################################################
############################################################
  
#Indexing reference library for BWA mapping:
        # -p is the prefix
        # -a is the algorithm (is) then the input file
bwa index -p Colub_Transcriptome  -a is ColubTSP.test15wBowtieRF.fasta

####  Map paired files with BWA to ColubTSP.test15wBowtieRF.fasta
#### Example
	#bwa mem ref.fa read1.fq read2.fq > aln-pe.sam
	# -t is the number of threads

#### Create list of names to process
# ls (list) contents of directory with files you want to focus on, cut the names of the files at 
        # underscore characters and keep the first three chunks (i.e. fields; -f 1,2,3), 
                       
                        # Colub_AATCCG_All_R1_paired.fastq.gz
                        # Colub_AATCCG_All_R2_paired.fastq.gz
                        
                # 1 = Colub
                # 2 = AATCCG
                # 3 = All  
                # So keep "Colub_AATCCG_All"
    	#  Sort the list of names on only keep one of each duplicate     

#### Use that list to run BWA in parallel running as many jobs a possible (-t 6) means to run each job using 6 threads
#  *** EDIT ***
ls | grep "paired.fastq.gz" |cut -d "_" -f 1,2,3 | sort | uniq | time parallel -j+0 --eta bwa mem -t 6 -M Colub_Transcriptome {1}_R1_paired.fastq.gz {1}_R2_paired.fastq.gz '>' {1}.sam ::: ${i}
# Output = Colub_AATCCG_All.sam


###############  Using samtools to process the bam Input: Colub_AATCCG_All.sam
#  Make the list of prefixes for all the .sam files we want to process with Samtools
ls | grep "All.sam" |cut -d "_" -f 1,2 | sort | uniq  > list


# Use a loop to process through the names in the list using samtools
while read i;
do
	## convert .sam to .bam and sort the alignments
	# -@ is the number of threads
samtools view -@ 12 -bS ${i}_All.sam  | samtools sort -@ 12 -  ${i}_sorted   # Example Input: Colub_AATCCG_All.sam; Output: Colub_AATCCG_sorted.bam
	## index the sorted .bam
samtools index 	${i}_sorted.bam
	## Tally counts of reads mapped to each transcript; and calcuate the stats. 
samtools idxstats   ${i}_sorted.bam     > 	${i}_Counts.txt
samtools flagstat 	${i}_sorted.bam 	>	${i}_Stats.txt

done<list
